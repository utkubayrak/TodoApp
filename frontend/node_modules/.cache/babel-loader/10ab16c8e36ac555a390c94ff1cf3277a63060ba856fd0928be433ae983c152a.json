{"ast":null,"code":"import axios from \"axios\";\n\n// URL\nconst TODO_URL = \"http://localhost:2222/todo/api\";\n\n// ADD\nexport const createTodoService = async todo => {\n  const response = await axios.post(TODO_URL + \"/create\", todo);\n  return response;\n};\n\n// DELETE\nexport const deleteTodoService = async id => {\n  const response = await axios.delete(TODO_URL + \"/delete/\" + id);\n  return response;\n};\n\n// UPDATE\nexport function updateTodoService(id, updatedTodo, contentType) {\n  return axios.put(`/api/todos/${id}`, updatedTodo, {\n    headers: {\n      'Content-Type': contentType\n    }\n  });\n}\n\n// CHECKED\nexport const checkTodoService = async id => {\n  const response = await axios.put(TODO_URL + \"/checked/\" + id);\n  return response;\n};\n\n// LIST\nexport const allTodoService = async () => {\n  const response = await axios.get(TODO_URL + \"/list\");\n  return response;\n};\n\n// FIND BY ID\nexport const findByIdService = async id => {\n  const response = await axios.get(TODO_URL + \"/find/\" + id);\n  return response;\n};\n\n// DELETE ALL\nexport const allDeleteService = async () => {\n  const response = await axios.delete(TODO_URL + \"/all/delete\");\n  return response;\n};\n\n// DELETE COMPLETED TASKS\nexport const deleteDoneAllService = async () => {\n  const response = await axios.delete(TODO_URL + \"/all/done/delete\");\n  return response;\n};\n\n// LIST COMPLETED TASKS\nexport const allDoneListService = async () => {\n  const response = await axios.get(TODO_URL + \"/all/done/list\");\n  return response;\n};\n\n// LIST UNCOMPLETED TASKS\nexport const allUncompletedListService = async () => {\n  const response = await axios.get(TODO_URL + \"/all/uncompleted/list\");\n  return response;\n};","map":{"version":3,"names":["axios","TODO_URL","createTodoService","todo","response","post","deleteTodoService","id","delete","updateTodoService","updatedTodo","contentType","put","headers","checkTodoService","allTodoService","get","findByIdService","allDeleteService","deleteDoneAllService","allDoneListService","allUncompletedListService"],"sources":["E:/ToDoList_Spring/frontend/src/service/TodoService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// URL\r\nconst TODO_URL = \"http://localhost:2222/todo/api\";\r\n\r\n// ADD\r\nexport const createTodoService = async (todo) => {\r\n  const response = await axios.post(TODO_URL + \"/create\", todo);\r\n  return response;\r\n};\r\n\r\n// DELETE\r\nexport const deleteTodoService = async (id) => {\r\n  const response = await axios.delete(TODO_URL + \"/delete/\" + id);\r\n  return response;\r\n};\r\n\r\n// UPDATE\r\nexport function updateTodoService(id, updatedTodo, contentType) {\r\n  return axios.put(`/api/todos/${id}`, updatedTodo, { headers: { 'Content-Type': contentType } });\r\n}\r\n\r\n// CHECKED\r\nexport const checkTodoService = async (id) => {\r\n  const response = await axios.put(TODO_URL + \"/checked/\"+ id );\r\n  return response;\r\n};\r\n\r\n// LIST\r\nexport const allTodoService = async () => {\r\n  const response = await axios.get(TODO_URL + \"/list\");\r\n  return response;\r\n};\r\n\r\n// FIND BY ID\r\nexport const findByIdService = async (id) => {\r\n  const response = await axios.get(TODO_URL + \"/find/\" + id);\r\n  return response;\r\n};\r\n\r\n// DELETE ALL\r\nexport const allDeleteService = async () => {\r\n  const response = await axios.delete(TODO_URL + \"/all/delete\");\r\n  return response;\r\n};\r\n\r\n// DELETE COMPLETED TASKS\r\nexport const deleteDoneAllService = async () => {\r\n  const response = await axios.delete(TODO_URL + \"/all/done/delete\");\r\n  return response;\r\n};\r\n\r\n// LIST COMPLETED TASKS\r\nexport const allDoneListService = async () => {\r\n  const response = await axios.get(TODO_URL + \"/all/done/list\");\r\n  return response;\r\n};\r\n\r\n// LIST UNCOMPLETED TASKS\r\nexport const allUncompletedListService = async () => {\r\n  const response = await axios.get(TODO_URL + \"/all/uncompleted/list\");\r\n  return response;\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,gCAAgC;;AAEjD;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,IAAI,IAAK;EAC/C,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAACJ,QAAQ,GAAG,SAAS,EAAEE,IAAI,CAAC;EAC7D,OAAOC,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EAC7C,MAAMH,QAAQ,GAAG,MAAMJ,KAAK,CAACQ,MAAM,CAACP,QAAQ,GAAG,UAAU,GAAGM,EAAE,CAAC;EAC/D,OAAOH,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,SAASK,iBAAiBA,CAACF,EAAE,EAAEG,WAAW,EAAEC,WAAW,EAAE;EAC9D,OAAOX,KAAK,CAACY,GAAG,CAAE,cAAaL,EAAG,EAAC,EAAEG,WAAW,EAAE;IAAEG,OAAO,EAAE;MAAE,cAAc,EAAEF;IAAY;EAAE,CAAC,CAAC;AACjG;;AAEA;AACA,OAAO,MAAMG,gBAAgB,GAAG,MAAOP,EAAE,IAAK;EAC5C,MAAMH,QAAQ,GAAG,MAAMJ,KAAK,CAACY,GAAG,CAACX,QAAQ,GAAG,WAAW,GAAEM,EAAG,CAAC;EAC7D,OAAOH,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAACf,QAAQ,GAAG,OAAO,CAAC;EACpD,OAAOG,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMa,eAAe,GAAG,MAAOV,EAAE,IAAK;EAC3C,MAAMH,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAACf,QAAQ,GAAG,QAAQ,GAAGM,EAAE,CAAC;EAC1D,OAAOH,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACQ,MAAM,CAACP,QAAQ,GAAG,aAAa,CAAC;EAC7D,OAAOG,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMe,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACQ,MAAM,CAACP,QAAQ,GAAG,kBAAkB,CAAC;EAClE,OAAOG,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMgB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAMhB,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAACf,QAAQ,GAAG,gBAAgB,CAAC;EAC7D,OAAOG,QAAQ;AACjB,CAAC;;AAED;AACA,OAAO,MAAMiB,yBAAyB,GAAG,MAAAA,CAAA,KAAY;EACnD,MAAMjB,QAAQ,GAAG,MAAMJ,KAAK,CAACgB,GAAG,CAACf,QAAQ,GAAG,uBAAuB,CAAC;EACpE,OAAOG,QAAQ;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}