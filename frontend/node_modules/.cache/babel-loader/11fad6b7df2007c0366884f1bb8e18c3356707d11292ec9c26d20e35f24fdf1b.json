{"ast":null,"code":"var _jsxFileName = \"E:\\\\ToDoList_Spring\\\\frontend\\\\src\\\\components\\\\Modal.js\",\n  _s = $RefreshSig$();\n// ModalComponent.js\n\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalComponent(_ref) {\n  _s();\n  let {\n    todoId,\n    handleCloseModal\n  } = _ref;\n  // State ve diğer işlemler\n  const [updatedContent, setUpdatedContent] = useState('');\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: true,\n    onHide: handleCloseModal,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Modal heading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        method: \"post\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: updatedContent,\n          onChange: event => setUpdatedContent(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleCloseModal,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => handleUpdateTodo(todoId, updatedContent),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalComponent, \"iWK5zLR1v6ilNnMvY+yn8rwElho=\");\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["React","useState","Button","Modal","jsxDEV","_jsxDEV","ModalComponent","_ref","_s","todoId","handleCloseModal","updatedContent","setUpdatedContent","show","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","action","method","type","value","onChange","event","target","Footer","variant","onClick","handleUpdateTodo","_c","$RefreshReg$"],"sources":["E:/ToDoList_Spring/frontend/src/components/Modal.js"],"sourcesContent":["// ModalComponent.js\r\n\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction ModalComponent({ todoId, handleCloseModal }) {\r\n  // State ve diğer işlemler\r\n  const [updatedContent, setUpdatedContent] = useState('');\r\n\r\n  return (\r\n    <Modal show={true} onHide={handleCloseModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Modal heading</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form action=\"\" method=\"post\">\r\n          <input\r\n            type=\"text\"\r\n            value={updatedContent}\r\n            onChange={(event) => setUpdatedContent(event.target.value)}\r\n          />\r\n\r\n        </form>\r\n\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n          Close\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={() => handleUpdateTodo(todoId, updatedContent)}>\r\n          Save Changes\r\n        </Button>\r\n\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalComponent;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,cAAcA,CAAAC,IAAA,EAA+B;EAAAC,EAAA;EAAA,IAA9B;IAAEC,MAAM;IAAEC;EAAiB,CAAC,GAAAH,IAAA;EAClD;EACA,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExD,oBACEI,OAAA,CAACF,KAAK;IAACU,IAAI,EAAE,IAAK;IAACC,MAAM,EAAEJ,gBAAiB;IAAAK,QAAA,gBAC1CV,OAAA,CAACF,KAAK,CAACa,MAAM;MAACC,WAAW;MAAAF,QAAA,eACvBV,OAAA,CAACF,KAAK,CAACe,KAAK;QAAAH,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACfjB,OAAA,CAACF,KAAK,CAACoB,IAAI;MAAAR,QAAA,eACTV,OAAA;QAAMmB,MAAM,EAAC,EAAE;QAACC,MAAM,EAAC,MAAM;QAAAV,QAAA,eAC3BV,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEhB,cAAe;UACtBiB,QAAQ,EAAGC,KAAK,IAAKjB,iBAAiB,CAACiB,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC,eACbjB,OAAA,CAACF,KAAK,CAAC4B,MAAM;MAAAhB,QAAA,gBACXV,OAAA,CAACH,MAAM;QAAC8B,OAAO,EAAC,WAAW;QAACC,OAAO,EAAEvB,gBAAiB;QAAAK,QAAA,EAAC;MAEvD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTjB,OAAA,CAACH,MAAM;QAAC8B,OAAO,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAMC,gBAAgB,CAACzB,MAAM,EAAEE,cAAc,CAAE;QAAAI,QAAA,EAAC;MAEnF;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEZ;AAACd,EAAA,CA/BQF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAiCvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}